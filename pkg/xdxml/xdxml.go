// WARNING: This file has automatically been generated on Tue, 07 May 2024 14:39:20 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package xdxml

/*
#cgo LDFLAGS: -Wl,--unresolved-symbols=ignore-in-object-files
#include "xdxml.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// xdxml_init function as declared in xdxml/xdxml.h:165
func xdxml_init() Return {
	__ret := C.xdxml_init()
	__v := (Return)(__ret)
	return __v
}

// xdxml_shutdown function as declared in xdxml/xdxml.h:177
func xdxml_shutdown() Return {
	__ret := C.xdxml_shutdown()
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_count function as declared in xdxml/xdxml.h:190
func xdxml_device_get_count(Device_count *uint32) Return {
	cDevice_count, cDevice_countAllocMap := (*C.uint)(unsafe.Pointer(Device_count)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_count(cDevice_count)
	runtime.KeepAlive(cDevice_countAllocMap)
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_product_name function as declared in xdxml/xdxml.h:201
func xdxml_device_get_product_name(Device Device, Device_name *byte) Return {
	cDevice, cDeviceAllocMap := *(*C.xdx_device_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cDevice_name, cDevice_nameAllocMap := (*C.char)(unsafe.Pointer(Device_name)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_product_name(cDevice, cDevice_name)
	runtime.KeepAlive(cDevice_nameAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_handle_by_index function as declared in xdxml/xdxml.h:229
func xdxml_device_get_handle_by_index(Index uint32, Device *Device) Return {
	cIndex, cIndexAllocMap := (C.uint)(Index), cgoAllocsUnknown
	cDevice, cDeviceAllocMap := (*C.xdx_device_t)(unsafe.Pointer(Device)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_handle_by_index(cIndex, cDevice)
	runtime.KeepAlive(cDeviceAllocMap)
	runtime.KeepAlive(cIndexAllocMap)
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_uuid function as declared in xdxml/xdxml.h:239
func xdxml_device_get_uuid(Device Device, Uuid *byte) Return {
	cDevice, cDeviceAllocMap := *(*C.xdx_device_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cUuid, cUuidAllocMap := (*C.char)(unsafe.Pointer(Uuid)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_uuid(cDevice, cUuid)
	runtime.KeepAlive(cUuidAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_minor_number function as declared in xdxml/xdxml.h:251
func xdxml_device_get_minor_number(Device Device, Minor_num *int32) Return {
	cDevice, cDeviceAllocMap := *(*C.xdx_device_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMinor_num, cMinor_numAllocMap := (*C.int)(unsafe.Pointer(Minor_num)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_minor_number(cDevice, cMinor_num)
	runtime.KeepAlive(cMinor_numAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_pci_info function as declared in xdxml/xdxml.h:267
func xdxml_device_get_pci_info(Device Device, Pci *Pci_info) Return {
	cDevice, cDeviceAllocMap := *(*C.xdx_device_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cPci, cPciAllocMap := (*C.xdx_pci_info_t)(unsafe.Pointer(Pci)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_pci_info(cDevice, cPci)
	runtime.KeepAlive(cPciAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}

// xdxml_device_get_mem_info function as declared in xdxml/xdxml.h:282
func xdxml_device_get_mem_info(Device Device, Memory *Memory) Return {
	cDevice, cDeviceAllocMap := *(*C.xdx_device_t)(unsafe.Pointer(&Device)), cgoAllocsUnknown
	cMemory, cMemoryAllocMap := (*C.xdx_memory_t)(unsafe.Pointer(Memory)), cgoAllocsUnknown
	__ret := C.xdxml_device_get_mem_info(cDevice, cMemory)
	runtime.KeepAlive(cMemoryAllocMap)
	runtime.KeepAlive(cDeviceAllocMap)
	__v := (Return)(__ret)
	return __v
}
